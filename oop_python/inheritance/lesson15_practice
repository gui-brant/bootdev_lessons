class Siege:
    def __init__(self, max_speed, efficiency):
        self.max_speed = max_speed
        self.efficiency = efficiency

    def get_trip_cost(self, distance, food_price):
        cost = (distance/self.efficiency) *food_price
        return cost
    def get_cargo_volume(self):
        pass


class BatteringRam(Siege):
    def __init__(self, max_speed, efficiency, load_weight, bed_area):
        super().__init__(max_speed, efficiency)
        self.load_weight = load_weight
        self.bed_area = bed_area

    def get_trip_cost(self, distance, food_price):
        cost = super().get_trip_cost(distance, food_price) + (self.load_weight*0.01)
        return cost
        #Note: if you have a method from the parent that has the same name as the method you're creating, you can still call the parent's method inside that method by using the "super()" keyword.
    def get_cargo_volume(self):
        volume = self.bed_area * 2
        return volume


class Catapult(Siege):
    def __init__(self, max_speed, efficiency, cargo_volume):
        super().__init__(max_speed, efficiency)
        self.cargo_volume = cargo_volume

    def get_cargo_volume(self):
        return self.cargo_volume

