class Trie:
    def search_level(self, current_level, current_prefix, words):
        if self.end_symbol in current_level:
            words.append(current_prefix)
        current_list = sorted(current_level) #this outputs a sorted list out of the current_level's keys. I didn't know that, that's pretty cool.
        for char in current_list:
            if char != self.end_symbol:
                extended_prefix = current_prefix + char#char = current_prefix + char --> Because of this, char in current_level[char] is a string like "de," and it only expects single keys.
                self.search_level(current_level[char], extended_prefix, words) #had to move forwards in the trie by inputting current_level[char]
        return words
        
    def words_with_prefix(self, prefix):
        match_words = []
        current_level = self.root
        for char in prefix:
            if char not in current_level:
                return []
            current_level = current_level[char] #same mistaek as before. Had to move foward in the trie by setting current_level to current_level[char]. You're checking a created trie, not adding stuff to it.
            
        return self.search_level(current_level, prefix, match_words)

